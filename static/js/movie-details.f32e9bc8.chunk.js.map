{"version":3,"file":"static/js/movie-details.f32e9bc8.chunk.js","mappings":"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","sources":["api/moviesApi.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '7618f77ef746f0154def67b21921ec43';\n\nexport const fetchTrendingsMovies = async (page) => {\n    const res = await axios.get(`/trending/movie/week?api_key=${API_KEY}&page=${page}`);\n\n    return res.data;\n};\n\nexport const fetchMoviesByName = async (query, page) => {\n    const searchParams = new URLSearchParams({\n        language: 'en-US',\n        page,\n        include_adult: false,\n    });\n    const res = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&${searchParams}`);\n\n    return res.data;\n};\n\nexport const fetchMovieByID = async (movieID) => {\n    const res = await axios.get(`/movie/${movieID}?api_key=${API_KEY}`);\n\n    return res.data;\n};\n\nexport const fetchMovieCast = async (movieID) => {\n    const res = await axios.get(`/movie/${movieID}/credits?api_key=${API_KEY}`);\n\n    return res.data;\n};\n\nexport const fetchMovieReviews = async (movieID) => {\n    const res = await axios.get(`/movie/${movieID}/reviews?api_key=${API_KEY}`);\n\n    return res.data;\n};","import styled from '@emotion/styled';\nimport { NavLink } from \"react-router-dom\";\n\nexport const Container = styled.main`\n    padding: 0 30px;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: #303f9f;\n    border-bottom: 1px solid #303f9f;\n  }\n`;\n\nexport const LinkList = styled.ul`\n    list-style: none;\n    padding: 0;\n`;\n\nexport const LinkListItem = styled.li`\n    margin-bottom: 10px;\n`;\n\nexport const Image = styled.img`\n    display: block;\n    padding: 0;\n    margin: 0;\n    width: 400px;\n    height: 500px;\n`;\n\nexport const Button = styled.button`\n    padding: 8px 16px;\n    margin-bottom: 20px;\n    border-radius: 2px;\n    background-color: #3f51b5;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    text-align: center;\n    display: inline-block;\n    color: #fff;\n    border: 0;\n    text-decoration: none;\n    cursor: pointer;\n    font-family: inherit;\n    font-size: 18px;\n    line-height: 24px;\n    font-style: normal;\n    font-weight: 500;\n    min-width: 180px;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n        0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    :hover,\n    :focus {\n        background-color: #303f9f;\n    }\n`;\n\nexport const MovieDetailsContainer = styled.div`\n    display: flex;\n`;\n\nexport const MovieInfoContainer = styled.div`\n    margin-left: 30px;\n`;\n\nexport const MovieTitle = styled.h2`\n    margin-bottom: 40px;\n`;\n\nexport const Info = styled.p`\n    margin-bottom: 30px;\n`;\n\nexport const Title = styled.h3`\n    margin-bottom: 20px;\n`;\n\nexport const Genres = styled.p`\n    margin-bottom: 100px;\n`;","import { Outlet, useLocation } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport PropTypes from 'prop-types';\nimport { PageLoader } from \"components/Loader/Loader\";\nimport {\n    Container,\n    Link,\n    LinkList,\n    LinkListItem,\n    Image,\n    Button,\n    MovieInfoContainer,\n    MovieDetailsContainer,\n    MovieTitle,\n    Info,\n    Title,\n    Genres\n} from \"./MovieInfo.styled\";\n\nexport const MovieInfo = ({ movie, onClick }) => {\n    const location = useLocation();\n    let poster;\n    let releaseDate = 'No date';\n    let voteAverage = 0;\n    let movieGenres = [];\n\n    if (movie.poster_path) {\n        poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n    } else {\n        poster = 'https://bflix.biz/no-poster.png';\n    };\n  \n    if (movie.release_date && movie.release_date !== '') {\n        releaseDate = movie.release_date.slice(0, 4);\n    };\n  \n    if (movie.vote_average) {\n        voteAverage = (movie.vote_average * 10).toFixed(1) + \"%\";\n    };\n  \n    if (movie.genres && movie.genres.length !== 0) {\n        movieGenres = movie.genres;\n    };\n\n    return (\n        <Container>\n            <Button type=\"button\" onClick={onClick}>Go back</Button>\n            <MovieDetailsContainer> \n                <Image src={poster} alt={movie.title} />\n                <MovieInfoContainer>\n                    <MovieTitle>{movie.title} ({releaseDate})</MovieTitle>\n                    <Info>User score: {voteAverage}</Info>\n                    <Title>Overview</Title>\n                    <Info>{movie.overview}</Info>\n                    <Title>Genres</Title>\n                    <Genres>{movieGenres.map(genre => genre.name).join(', ')}</Genres> \n                    <Title>Additional information</Title>\n                    <LinkList>\n                        <LinkListItem><Link to=\"cast\" state={location.state}>Cast</Link></LinkListItem>\n                        <LinkListItem><Link to=\"reviews\" state={location.state}>Reviews</Link></LinkListItem>\n                    </LinkList>\n            </MovieInfoContainer>    \n             </MovieDetailsContainer>          \n            <Suspense fallback={<PageLoader />}>\n                <hr />\n                <Outlet />\n            </Suspense>\n        </Container>\n    );\n};\n\nMovieInfo.propTypes = {\n    movie: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        overview: PropTypes.string,\n        release_date: PropTypes.string,\n        genres: PropTypes.array,\n        vote_average: PropTypes.number,\n    }),\n    onClick: PropTypes.func.isRequired,\n};","import { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieByID } from \"api/moviesApi\";\nimport { MovieInfo } from \"components/MovieInfo/MovieInfo\";\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  useEffect(() => { \n      async function fetchData() {\n        const movie = await fetchMovieByID(movieId);\n        setMovie(movie);\n    };\n    fetchData();\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    navigate(location?.state?.from ?? \"/\");\n  };\n\n  return (\n    <main>\n      <MovieInfo movie={movie} onClick={handleGoBack} />\n    </main>\n  );\n};\n\nexport default MovieDetails;"],"names":["axios","API_KEY","fetchTrendingsMovies","page","res","data","fetchMoviesByName","query","searchParams","URLSearchParams","language","include_adult","fetchMovieByID","movieID","fetchMovieCast","fetchMovieReviews","Container","styled","Link","NavLink","LinkList","LinkListItem","Image","Button","MovieDetailsContainer","MovieInfoContainer","MovieTitle","Info","Title","Genres","MovieInfo","poster","movie","onClick","location","useLocation","releaseDate","voteAverage","movieGenres","poster_path","release_date","slice","vote_average","toFixed","genres","length","type","src","alt","title","overview","map","genre","name","join","to","state","Suspense","fallback","movieId","useParams","useState","setMovie","navigate","useNavigate","useEffect","fetchData","from"],"sourceRoot":""}