{"version":3,"file":"static/js/reviews.74077d1a.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAoB,mCAAG,WAAOC,GAAP,uFACdH,IAAAA,IAAA,uCAA0CC,EAA1C,iBAA0DE,IAD5C,cAC1BC,EAD0B,yBAGzBA,EAAIC,MAHqB,2CAAH,sDAMpBC,EAAiB,mCAAG,WAAOC,EAAOJ,GAAd,gFACvBK,EAAe,IAAIC,gBAAgB,CACrCC,SAAU,QACVP,KAAAA,EACAQ,eAAe,IAJU,SAMXX,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDM,EAApD,YAA6DC,IANlD,cAMvBJ,EANuB,yBAQtBA,EAAIC,MARkB,2CAAH,wDAWjBO,EAAc,mCAAG,WAAOC,GAAP,uFACRb,IAAAA,IAAA,iBAAoBa,EAApB,oBAAuCZ,IAD/B,cACpBG,EADoB,yBAGnBA,EAAIC,MAHe,2CAAH,sDAMdS,EAAc,mCAAG,WAAOD,GAAP,uFACRb,IAAAA,IAAA,iBAAoBa,EAApB,4BAA+CZ,IADvC,cACpBG,EADoB,yBAGnBA,EAAIC,MAHe,2CAAH,sDAMdU,EAAiB,mCAAG,WAAOF,GAAP,uFACXb,IAAAA,IAAA,iBAAoBa,EAApB,4BAA+CZ,IADpC,cACvBG,EADuB,yBAGtBA,EAAIC,MAHkB,2CAAH,uD,mJCnCjBW,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACI,2BACI,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,cCqBvB,EAnBgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,qGACsBV,EAAAA,EAAAA,IAAkBK,GADxC,OACQM,EADR,OAEIF,EAAgBE,EAAMC,SAF1B,4CADY,uBAAC,WAAD,wBAKdC,KACC,CAACR,KAGF,wBACGG,EAAaM,KAAI,SAAAZ,GAAM,OAAI,SAACD,EAAD,CAA8BC,OAAQA,GAAnBA,EAAOa","sources":["api/moviesApi.jsx","components/MovieReviews/MovieReviews.jsx","pages/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '7618f77ef746f0154def67b21921ec43';\n\nexport const fetchTrendingsMovies = async (page) => {\n    const res = await axios.get(`/trending/movie/week?api_key=${API_KEY}&page=${page}`);\n\n    return res.data;\n};\n\nexport const fetchMoviesByName = async (query, page) => {\n    const searchParams = new URLSearchParams({\n        language: 'en-US',\n        page,\n        include_adult: false,\n    });\n    const res = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&${searchParams}`);\n\n    return res.data;\n};\n\nexport const fetchMovieByID = async (movieID) => {\n    const res = await axios.get(`/movie/${movieID}?api_key=${API_KEY}`);\n\n    return res.data;\n};\n\nexport const fetchMovieCast = async (movieID) => {\n    const res = await axios.get(`/movie/${movieID}/credits?api_key=${API_KEY}`);\n\n    return res.data;\n};\n\nexport const fetchMovieReviews = async (movieID) => {\n    const res = await axios.get(`/movie/${movieID}/reviews?api_key=${API_KEY}`);\n\n    return res.data;\n};","export const MovieReviews = ({ review }) => {\n    return (\n        <li>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n        </li>\n    )\n};","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieReviews } from \"api/moviesApi\";\nimport { MovieReviews } from \"components/MovieReviews/MovieReviews\";\n\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => { \n      async function fetchData() {\n        const movie = await fetchMovieReviews(movieId);\n          setMovieReviews(movie.results);\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {movieReviews.map(review => <MovieReviews key={review.id} review={review} />)}\n    </ul>\n  );\n};\n\nexport default Reviews;"],"names":["axios","API_KEY","fetchTrendingsMovies","page","res","data","fetchMoviesByName","query","searchParams","URLSearchParams","language","include_adult","fetchMovieByID","movieID","fetchMovieCast","fetchMovieReviews","MovieReviews","review","author","content","movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","movie","results","fetchData","map","id"],"sourceRoot":""}