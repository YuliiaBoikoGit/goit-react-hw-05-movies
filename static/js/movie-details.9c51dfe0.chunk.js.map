{"version":3,"file":"static/js/movie-details.9c51dfe0.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAoB,mCAAG,WAAOC,GAAP,uFACdH,IAAAA,IAAA,uCAA0CC,EAA1C,iBAA0DE,IAD5C,cAC1BC,EAD0B,yBAGzBA,EAAIC,MAHqB,2CAAH,sDAMpBC,EAAiB,mCAAG,WAAOC,EAAOJ,GAAd,gFACvBK,EAAe,IAAIC,gBAAgB,CACrCC,SAAU,QACVP,KAAAA,EACAQ,eAAe,IAJU,SAMXX,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDM,EAApD,YAA6DC,IANlD,cAMvBJ,EANuB,yBAQtBA,EAAIC,MARkB,2CAAH,wDAWjBO,EAAc,mCAAG,WAAOC,GAAP,uFACRb,IAAAA,IAAA,iBAAoBa,EAApB,oBAAuCZ,IAD/B,cACpBG,EADoB,yBAGnBA,EAAIC,MAHe,2CAAH,sDAMdS,EAAc,mCAAG,WAAOD,GAAP,uFACRb,IAAAA,IAAA,iBAAoBa,EAApB,4BAA+CZ,IADvC,cACpBG,EADoB,yBAGnBA,EAAIC,MAHe,2CAAH,sDAMdU,EAAiB,mCAAG,WAAOF,GAAP,uFACXb,IAAAA,IAAA,iBAAoBa,EAApB,4BAA+CZ,IADpC,cACvBG,EADuB,yBAGtBA,EAAIC,MAHkB,2CAAH,uD,uKC/BjBW,EAAY,SAAC,GAAe,IACjCC,EADoBC,EAAY,EAAZA,MAEpBC,EAAc,UACdC,EAAc,EACdC,EAAc,GAoBlB,OAjBIJ,EADAC,EAAMI,YACA,yCAAqCJ,EAAMI,aAExC,kCAGTJ,EAAMK,cAAuC,KAAvBL,EAAMK,eAC5BJ,EAAcD,EAAMK,aAAaC,MAAM,EAAG,IAG1CN,EAAMO,eACNL,GAAoC,GAArBF,EAAMO,cAAmBC,QAAQ,GAAK,KAGrDR,EAAMS,QAAkC,IAAxBT,EAAMS,OAAOC,SAC7BP,EAAcH,EAAMS,SAIpB,6BACI,mBAAQE,KAAK,SAAb,sBACA,gBAAKC,IAAKb,EAAQc,IAAKb,EAAMc,SAC7B,0BAAKd,EAAMc,MAAX,KAAoBb,EAApB,QACA,wCAAgBC,MAChB,sCACA,uBAAIF,EAAMe,YACV,oCACA,uBAAIZ,EAAYa,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,SAC9C,mBACA,2BACI,yBAAI,SAAC,KAAD,CAAMC,GAAG,OAAT,qBACJ,yBAAI,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAER,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACI,SAAC,KAAD,UCpBhB,EAnBqB,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOzB,EAAP,KAAc0B,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,qGACsBjC,EAAAA,EAAAA,IAAe6B,GADrC,OACQvB,EADR,OAEE0B,EAAS1B,GAFX,2CADY,yBAAC,WAAD,wBAKd4B,KACC,CAACL,KAGF,2BACE,SAACzB,EAAD,CAAWE,MAAOA","sources":["api/moviesApi.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '7618f77ef746f0154def67b21921ec43';\n\nexport const fetchTrendingsMovies = async (page) => {\n    const res = await axios.get(`/trending/movie/week?api_key=${API_KEY}&page=${page}`);\n\n    return res.data;\n};\n\nexport const fetchMoviesByName = async (query, page) => {\n    const searchParams = new URLSearchParams({\n        language: 'en-US',\n        page,\n        include_adult: false,\n    });\n    const res = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&${searchParams}`);\n\n    return res.data;\n};\n\nexport const fetchMovieByID = async (movieID) => {\n    const res = await axios.get(`/movie/${movieID}?api_key=${API_KEY}`);\n\n    return res.data;\n};\n\nexport const fetchMovieCast = async (movieID) => {\n    const res = await axios.get(`/movie/${movieID}/credits?api_key=${API_KEY}`);\n\n    return res.data;\n};\n\nexport const fetchMovieReviews = async (movieID) => {\n    const res = await axios.get(`/movie/${movieID}/reviews?api_key=${API_KEY}`);\n\n    return res.data;\n};","import { Link, Outlet } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport { PageLoader } from \"components/Loader/Loader\";\n\nexport const MovieInfo = ({ movie }) => {\n    let poster;\n    let releaseDate = 'No date';\n    let voteAverage = 0;\n    let movieGenres = [];\n\n    if (movie.poster_path) {\n        poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n    } else {\n        poster = 'https://bflix.biz/no-poster.png';\n    };\n  \n    if (movie.release_date && movie.release_date !== '') {\n        releaseDate = movie.release_date.slice(0, 4);\n    };\n  \n    if (movie.vote_average) {\n        voteAverage = (movie.vote_average * 10).toFixed(1) + \"%\";\n    };\n  \n    if (movie.genres && movie.genres.length !== 0) {\n        movieGenres = movie.genres;\n    };\n\n    return (\n        <main>\n            <button type=\"button\">Go back</button>\n            <img src={poster} alt={movie.title} />\n            <h2>{movie.title} ({releaseDate})</h2>\n            <p>User score: {voteAverage}</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            <p>{movieGenres.map(genre => genre.name).join(', ')}</p>\n            <hr />\n            <ul>\n                <li><Link to=\"cast\">Cast</Link></li>\n                <li><Link to=\"reviews\">Reviews</Link></li>\n            </ul>\n            <Suspense fallback={<PageLoader />}>\n                <Outlet />\n            </Suspense>\n        </main>\n    );\n};","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieByID } from \"api/moviesApi\";\nimport { MovieInfo } from \"components/MovieInfo/MovieInfo\";\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n\n  useEffect(() => { \n      async function fetchData() {\n        const movie = await fetchMovieByID(movieId);\n        setMovie(movie);\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <main>\n      <MovieInfo movie={movie} />\n    </main>\n  );\n};\n\nexport default MovieDetails;"],"names":["axios","API_KEY","fetchTrendingsMovies","page","res","data","fetchMoviesByName","query","searchParams","URLSearchParams","language","include_adult","fetchMovieByID","movieID","fetchMovieCast","fetchMovieReviews","MovieInfo","poster","movie","releaseDate","voteAverage","movieGenres","poster_path","release_date","slice","vote_average","toFixed","genres","length","type","src","alt","title","overview","map","genre","name","join","to","Suspense","fallback","movieId","useParams","useState","setMovie","useEffect","fetchData"],"sourceRoot":""}