{"version":3,"file":"static/js/movies.361acc56.chunk.js","mappings":"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","sources":["api/moviesApi.jsx","components/LoadBtn/LoadBtn.styled.jsx","components/LoadBtn/LoadBtn.jsx","components/MovieGallery/MovieGallery.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.jsx","components/MovieGallery/MovieGallery.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '7618f77ef746f0154def67b21921ec43';\n\nexport const fetchTrendingsMovies = async (page) => {\n    const res = await axios.get(`/trending/movie/week?api_key=${API_KEY}&page=${page}`);\n\n    return res.data;\n};\n\nexport const fetchMoviesByName = async (query, page) => {\n    const searchParams = new URLSearchParams({\n        language: 'en-US',\n        page,\n        include_adult: false,\n    });\n    const res = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&${searchParams}`);\n\n    return res.data;\n};\n\nexport const fetchMovieByID = async (movieID) => {\n    const res = await axios.get(`/movie/${movieID}?api_key=${API_KEY}`);\n    \n    return res.data;\n};\n\nexport const fetchMovieCast = async (movieID) => {\n    const res = await axios.get(`/movie/${movieID}/credits?api_key=${API_KEY}`);\n\n    return res.data;\n};\n\nexport const fetchMovieReviews = async (movieID) => {\n    const res = await axios.get(`/movie/${movieID}/reviews?api_key=${API_KEY}`);\n\n    return res.data;\n};","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n  background-color: #303f9f;\n  }\n`;","import PropTypes from \"prop-types\";\nimport { Button } from \"./LoadBtn.styled\";\n\nexport const LoadButton = ({onClick}) => {\n    return <Button type=\"button\" onClick={onClick}>Load more</Button>\n};\n\nLoadButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  padding: 20px 0;\n  list-style: none;\n  margin-top: 0;\n  margin-bottom: 10px;\n  margin-left: auto;\n  margin-right: auto;\n`;","import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\n\nexport const MovieGalleryItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  :hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const MovieGalleryItemImage = styled.img`\n  width: 100%;\n  height: 440px;\n  object-fit: contain;\n`;\n\nexport const MovieGalleryItemTitle = styled.p`\n  margin: 0;\n  padding: 35px 0;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  height: 24px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #000;\n`;","import PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { MovieGalleryItem, MovieGalleryItemImage, MovieGalleryItemTitle, MovieLink } from \"./MovieGalleryItem.styled\";\n\nexport const GalleryItem = ({ movie }) => {\n    const location = useLocation();\n    \n    let poster;\n\n    if (movie.poster_path) { \n        poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n    } else {\n        poster = 'https://bflix.biz/no-poster.png';\n    };\n    \n    return (\n        <MovieGalleryItem>\n            <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                <MovieGalleryItemTitle>{movie.title}</MovieGalleryItemTitle>\n                <MovieGalleryItemImage src={poster} alt={movie.title} />\n            </MovieLink>    \n        </MovieGalleryItem>\n    );\n};\n\nGalleryItem.propTypes = {\n    movie: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        poster_path: PropTypes.string,\n        id: PropTypes.number,\n    }),\n};","import PropTypes from \"prop-types\";\nimport { Gallery } from \"./MovieGallery.styled\";\nimport { GalleryItem } from \"components/MovieGalleryItem/MovieGalleryItem\";\n\nexport const MovieGallery = ({ movies }) => {\n    return (\n        <>\n            <Gallery>\n                {movies.map(movie =>\n                 <GalleryItem key={movie.id} movie={movie} />\n             )}\n            </Gallery>\n        </>    \n    );\n};\n\nGallery.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n        }),\n    ),\n};","import styled from '@emotion/styled';\n\nexport const SearchBar = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #fff;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://www.svgrepo.com/show/14071/search.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n  opacity: 1;\n}\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  ::placeholder {\n  font: inherit;\n  font-size: 18px;\n}\n`;\n\nexport const Info = styled.p`\n  margin-right: auto;\n  margin-left: auto;\n  font-size: 24px;\n  color: gray;\n`;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { SearchBar, SearchForm, SearchFormButton, SearchFormButtonLabel, SearchFormInput } from \"./SearchBar.styled\";\n\nexport const Searchbar = ({ onSubmit }) => {\n    const [movieName, setMovieName] = useState('');\n\n    const handleNameChange = event => {\n        setMovieName(event.currentTarget.value.toLowerCase());\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        if (movieName.trim() === '') {\n            toast.warn('Enter your query');\n            return;\n        };\n\n        onSubmit(movieName);\n        setMovieName('');\n    };\n\n    return (\n        <SearchBar>\n            <SearchForm onSubmit={handleSubmit}>\n                <SearchFormButton type=\"submit\">\n                    <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n                </SearchFormButton>\n                <SearchFormInput\n                    type=\"text\"\n                    name=\"query\"\n                    autocomplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movies\"\n                    value={movieName}\n                    onChange={handleNameChange}\n                />\n            </SearchForm>\n        </SearchBar>\n    );\n};\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func,\n};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchMoviesByName } from 'api/moviesApi';\nimport { Searchbar } from 'components/SearchBar/SearchBar';\nimport { Info } from 'components/SearchBar/SearchBar.styled';\nimport { MovieGallery } from 'components/MovieGallery/MovieGallery';\nimport { LoadButton } from 'components/LoadBtn/LoadBtn';\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [page, setPage] = useState(1);\n    const [movies, setMovies] = useState([]);\n    const [movieName, setMovieName] = useState(searchParams.get('query') ||'');\n    const [error, setError] = useState('');\n\n    useEffect(() => { \n        if (!movieName) return;\n\n        fetchMoviesByName(movieName, page)\n        .then(data => {\n            if (data.total_results === 0) {\n                throw new Error('Sorry, there are no movies matching your search query. Please try again.');\n            };\n\n            if (data.results.length === 0) {\n                setMovieName('');\n                return toast.error(\"We're sorry, but you've reached the end of search results.\");\n            };\n\n            setSearchParams({ query: movieName });\n\n            setMovies(prevState => [...prevState, ...data.results]);\n        })\n        .catch(error => setError(error));\n    }, [movieName, page, setSearchParams]);\n\n    const handleFormSubmit = movieName => {\n        setMovieName(movieName);\n        setPage(1);\n        setMovies([]);\n        setError('');\n    };\n\n    const loadMore = () => {\n        setPage(prevState => prevState + 1);\n    };\n\n    const itemsPerPage = 20;\n    \n    return (\n        <>\n            <Searchbar onSubmit={handleFormSubmit} />\n\n            {error && <Info>{error.message}</Info>}\n\n            <MovieGallery movies={movies} />\n\n            {movies.length >= itemsPerPage && movieName && <LoadButton onClick={loadMore} />}\n\n            <ToastContainer position=\"top-center\" />\n        </>\n    );\n};\n\nexport default Movies;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["axios","API_KEY","fetchTrendingsMovies","page","res","data","fetchMoviesByName","query","searchParams","URLSearchParams","language","include_adult","fetchMovieByID","movieID","fetchMovieCast","fetchMovieReviews","Button","styled","LoadButton","onClick","type","Gallery","MovieGalleryItem","MovieGalleryItemImage","MovieGalleryItemTitle","MovieLink","Link","GalleryItem","poster","movie","location","useLocation","poster_path","to","id","state","from","title","src","alt","MovieGallery","movies","map","propTypes","PropTypes","SearchBar","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","Info","Searchbar","onSubmit","useState","movieName","setMovieName","event","preventDefault","trim","toast","name","autocomplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","useSearchParams","setSearchParams","setPage","setMovies","get","error","setError","useEffect","then","total_results","Error","results","length","prevState","catch","message","position","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}